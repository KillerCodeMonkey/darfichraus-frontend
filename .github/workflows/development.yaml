# This workflow will build a package using Maven and then publish it to GitHub docker registry
# For more information see: https://github.com/actions/setup-java#apache-maven-with-a-settings-path

name: Deploy to Production
env:
  NAMESPACE: production
  REPO: crimsyfrontend/ng-frontend

on:
  push:
    branches:
      - master

jobs:
  docker:
    name: Publish to Docker Registry
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Cache node modules
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - uses: actions/setup-node@v1
        with:
          node-version: '13.x'
      - name: Install Dependencies
        run: npm install
      - name: Install Angular Cli
        run: npm install -g @angular/cli
      - name: Install Angular Cli
        run: ng build
      - name: Docker Login
        run: echo ${{secrets.DOCKER_PASSWORD}} | docker login -u ${{secrets.DOCKER_USERNAME}} --password-stdin
      - name: Build Docker image
        run: docker build -t ${REPO}:${GITHUB_RUN_ID} .
      - name: Publish Docker image
        run: docker push ${REPO}:${GITHUB_RUN_ID}
  deploy:
    name: deploy to cluster
    needs: [docker]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: deploy to cluster
        uses: steebchen/kubectl@v1.0.0
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG }}
        with:
          args: set image --record deployment/frontend frontend=${REPO}:${GITHUB_RUN_ID} -n ${NAMESPACE}
      - name: verify deployment
        uses: steebchen/kubectl@v1.0.0
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG }}
        with:
          args: '"rollout status deployment/frontend -n ${NAMESPACE}"'

